### YamlMime:FAQ
metadata:
  title: Azure AI Search FAQ
  titleSuffix: Azure AI Search
  description: Get answers to common questions about Microsoft Azure AI Search service, a cloud hosted search service on Microsoft Azure.
  
  manager: nitinme
  author: HeidiSteen
  ms.author: heidist
  ms.service: azure-ai-search
  ms.topic: faq
  ms.date: 05/28/2024
title: Azure AI Search Frequently Asked Questions
summary:  Find answers to commonly asked questions about Azure AI Search.

sections:
  - name: General
    questions:
      - question: |
          What is Azure AI Search?
        answer: | 
          Azure AI Search provides a dedicated search engine and persistent storage of your searchable content for full text and vector search scenarios. It also includes optional, integrated AI to extract more text and structure from raw content, and to chunk and vectorize content for vector search.

      - question: |
          How do I work with Azure AI Search?
        answer: | 
          The primary workflow is create, load, and query an index. Although you can use the Azure portal for most tasks, Azure AI Search is intended to be used programmatically, handling requests from client code. Programmatic support is provided through REST APIs and client libraries in .NET, Python, Java, and JavaScript SDKs for Azure.

      - question: |
          Are "Azure Search" and "Azure Cognitive Search" and "Azure AI Search" the same product?
        answer: |
          Azure Search was renamed to Azure Cognitive Search in October 2019 to reflect the expanded (yet optional) use of cognitive skills and AI processing in service operations. Azure Cognitive Search was renamed to Azure AI Search in October 2023 to align with Azure AI services. 

      - question: |
          What languages are supported?
        answer: |
          For vectors, the embedding models you use determines the linguistic experience. 
          
          For nonvector strings and numbers, the default analyzer used for tokenization is standard Lucene and it is language agnostic. Otherwise, language support is expressed through [language analyzers](index-add-language-analyzers.md#supported-language-analyzers) that apply linguistic rules to inbound (indexing) and outbound (queries) content. Some features, such as [speller](speller-how-to-add.md#supported-languages), are limited to a subset of languages.

      - question: |
          How do I integrate search into my solution?
        answer: |
          Client code should call the Azure SDK client libraries or REST APIs to connect to a search index, formulate queries, and handle responses. You can also write code that builds and refreshes an index, or runs indexers programmatically or by script.

      - question: |
          Is there functional parity across the various APIs?
        answer: |
          Not always. The REST API is always the first to implement new features in preview API versions. The client libraries in Azure SDKs will pick up new features over time, but are released on their own schedule.

          Although the REST APIs are first out with newest features, the Azure SDKs provide more coding support, and are recommended over REST unless a required feature is unavailable.

      - question: |
          Can I pause the service and stop billing?
        answer: |
          You can't pause a search service. In Azure AI Search, computing resources are allocated when the service is created. It's not possible to release and reclaim those resources on-demand.

      - question: |
          Can I upgrade, downgrade, rename or move the service?
        answer: |
          Service tier, name, and region are fixed for the lifetime of the service.
          
      - question: |
          If I migrate my search service to another subscription or resource group, should I expect any downtime?
        answer: |
          As long as you follow the [checklist before moving resources](/azure/azure-resource-manager/management/move-resource-group-and-subscription) and make sure each step is completed, there shouldn't be any downtime.

  - name: Indexing 
    questions:
      - question: |
          What does "indexing" mean in Azure AI Search?
        answer: |
          It refers to the ingestion, parsing, and storing of textual content and tokens that populate a search index. Indexing creates inverted indexes and other physical data structures that support information retrieval. 
          
          It creates vector indexes if the schema includes vector fields.

      - question: |
          Can I move, backup, and restore indexes?
        answer: |
          There's no native support for porting indexes. Search indexes are considered downstream data structures, accepting content from other data sources that collect operational data. As such, there's no built-in support for backing up and restoring indexes because the expectation is that you would rebuild an index from source data if you deleted it, or wanted to move it.
          
          However, if you want to move an index between search services, you can try the **index-backup-restore** sample code in this [Azure AI Search .NET sample repo](https://github.com/Azure-Samples/azure-search-dotnet-utilities). There's also a [Python version of backup and restore](https://github.com/Azure/azure-search-vector-samples/blob/main/demo-python/code/index-backup-restore/azure-search-backup-and-restore.ipynb).
                   
      - question: |
          Can I restore my index or service once it's deleted?
        answer: |
          No, if you delete an Azure AI Search index or service, it can't be recovered. When you delete a search service, all indexes in the service are deleted permanently.   
                    
      - question: |
          Can I index from SQL Database replicas?
        answer: |
          If you're using the search indexer for Azure SQL Database, there are no restrictions on the use of primary or secondary replicas as a data source when building an index from scratch. However, refreshing an index with incremental updates (based on changed records) requires the primary replica. This requirement comes from SQL Database, which guarantees change tracking on primary replicas only. If you try using secondary replicas for an index refresh workload, there's no guarantee you get all of the data.

  - name: Vectors
    questions:
      - question: |
          What is vector search?
        answer: |
          Vector search is a technique that finds the most similar documents by comparing their vector representations. Since the goal of a vector representation is to capture the essential characteristics of an item in a numerical format, vector queries can identify similar content even if there are no explicit matches based on keywords or tags. When a user performs a search, the query is summarized into a vector representation and the vector search engine identifies the most similar documents. To improve efficiency on large databases, vector search often provides the approximate nearest neighbors for a query vector. See [Vector search overview](vector-search-overview.md) for the specifics of Azure AI Search's vector offering.

      - question: |
          Does Azure AI Search support vector search?
        answer: |
          Azure AI Search supports vector indexing and retrieval. It can vectorize query strings and content if you use the preview and beta libraries. 

      - question: |
          How does vector search work in Azure AI Search?
        answer: |
          With standalone vector search, you first use an embedding model to transform content into a vector representation within an embedding space. You can then provide these vectors in a document payload to the search index for indexing. To serve search requests, you use the same deep neural network (DNN) from indexing to transform the search query into a vector representation, and vector search finds the most similar vectors and return the corresponding documents.
          
          In Azure AI Search, you can index vector data as fields in documents alongside textual and other types of content. There are [multiple data types](/rest/api/searchservice/supported-data-types#edm-data-types-for-vector-fields) for vector fields. 
          
          Vector queries can be issued standalone or in combination with other query types, including term queries and filters in the same search request.

      - question: |
          Can Azure AI Search vectorize my content or queries?
        answer: |
          [Built-in integrated vectorization](vector-search-integrated-vectorization.md) is now generally available. 

      - question: |
          Does my search service support vector search?
        answer: |
          Most existing services support vector search. If you're using a package or API that supports vector search and index creation fails, the underlying search service doesn't support vector search, and a new service must be created. This can occur for a small subset of services created prior to January 1, 2019.

      - question: |
          Can I add vector search to an existing index?
        answer: |
          If your search service supports vector search, both existing and new indexes can accommodate vector fields.

      - question: |
          Why do I see different vector index size limits between my new search services and existing search services?
        answer: |
          We're rolling out improved vector index size limits worldwide for new search services, but we're still building out infrastructure capacity in certain regions. New search services created in supported regions will see increased vector index size limits. Unfortunately, we can't migrate existing services to the new limits.

      - question: |
          How do I enable vector search on a search index?
        answer: |
          To enable vector search in an index, you should:

          * Add one or more vector fields to a field collection.
          
          * Add a "vectorSearch" section to the index schema specifying the configuration used by vector search fields, including the parameters of the Approximate Nearest Neighbor algorithm used, like HNSW.
          
          * Use the latest stable version[**2024-07-01**](/rest/api/searchservice), or an Azure SDK to create or update the index, load documents, and issue queries.

  - name: Queries
    questions:
      - question: |
          Where does query execution occur?
        answer: |
          Queries execute over a single search index that's hosted on your search service. You can't join multiple indexes to search content in two or more indexes, but you can [query same-name indexes in multiple search services](https://github.com/Azure-Samples/azure-search-dotnet-scale/tree/main/multiple-search-services).
              
      - question: |
          Why are there zero matches on terms I know to be valid?
        answer: |
          The most common case isn't knowing that each query type supports different search behaviors and levels of linguistic analyses. Full text search, which is the predominant workload, includes a language analysis phase that breaks down terms to root forms. This aspect of query parsing casts a broader net over possible matches, because the tokenized term matches a greater number of variants.
          
          Wildcard, fuzzy and regex queries, however, aren't analyzed like regular term or phrase queries and can lead to poor recall if the query doesn't match the analyzed form of the word in the search index. For more information on query parsing and analysis, see [query architecture](./search-lucene-query-architecture.md).
          
      - question: |
          Why are my wildcard searches slow?
        answer: |
          Most wildcard search queries, like prefix, fuzzy and regex, are rewritten internally with matching terms in the search index. This extra processing adds to latency. Further, broad search queries, like `a*` for example, are likely to be rewritten with many terms, which can be slow. For performant wildcard searches, consider defining a [custom analyzer](/rest/api/searchservice/custom-analyzers-in-azure-search).

      - question: |
          Can I search across multiple indexes?
        answer: |
          No, a query is always scoped to a single index.
           
      - question: |
          Why is the search score a constant 1.0 for every match?
        answer: |
          Search scores are generated for full text search queries, based on the [statistical properties of matching terms](search-lucene-query-architecture.md#stage-4-scoring), and ordered high to low in the result set. Query types that aren't full text search (wildcard, prefix, regex) aren't ranked by a relevance score. This behavior is by design. A constant score allow matches found through query expansion to be included in the results, without affecting the ranking.
          
          For example, suppose an input of "tour*" in a wildcard search produces matches on "tours", "tourettes", and "tourmaline". Given the nature of these results, there's no way to reasonably infer which terms are more valuable than others. For this reason, term frequencies are ignored when scoring results in queries of types wildcard, prefix, and regex. Search results based on a partial input are given a constant score to avoid bias towards potentially unexpected matches.

  - name: Security
    questions:
      - question: |
          Where does Azure AI Search store customer data?
        answer: |
          It stores your data in the [geography (Geo)](https://azure.microsoft.com/explore/global-infrastructure/geographies/#geographies) where your service is deployed. Microsoft might replicate your data within the same geo for high availability and durability. For more information, see [data residency in Azure](https://azure.microsoft.com/explore/global-infrastructure/data-residency/#overview).

      - question: |
          Does Azure AI Search send customer data to other services for processing?
        answer: |
          Yes, skills and vectorizers make [outbound calls from Azure AI Search](search-security-overview.md) to other Azure resources or external models that you specify for embedding or chat. Calls to those APIs typically contain raw content to be processed or queries that are vectorized by an embedding model. For Azure-to-Azure connections, the service sends requests over the internal network. If you add a custom skill or vectorizer, the indexer sends content to the URI provided in the custom skill over the public network unless you configure a [shared private link](search-indexer-howto-access-private.md).

      - question: |
          Does Azure AI Search process customer data in other regions?
        answer: |
          Processing (vectorization or applied AI transformations) is performed in the Geo that hosts the Azure AI services used by skills, or the Azure apps or functions hosting custom skills, or the Azure OpenAI or Azure AI Foundry region that hosts your deployed models. These resources are specified by you, so you can choose whether to provision them in the same Geo as your search service or not
          
          If you send data to external (non-Azure) models or services, the processing location is determined by the external service. 

      - question: |
          Can I control access to search results based on user identity?
        answer: |
          You can if you implement a solution that associates documents with a user identity. Typically, users who are authorized to run your application are also authorized to see all search results. Azure AI Search doesn't have built-in support for row-level or document-level permissions, but you can implement [security filters](./search-security-trimming-for-azure-search.md) as a workaround. For steps and script, see [Get started with the Python enterprise chat sample using RAG](/azure/developer/python/get-started-app-chat-template).

      - question: |
          Can I control access to operations based on user identity?
        answer: |
          Yes, you can use [role-based authorization](search-security-rbac.md) for data plane operations over content.

      - question: |
          Can I use the Azure portal to view and manage search content if the search service is behind an IP firewall or a private endpoint?
        answer: |
          You can use the Azure portal on a network-protected search service if you create a network exception that allows client and portal access. For more information, see [connect through an IP firewall](./service-configure-firewall.md#allow-access-from-your-client-and-portal-ip) or [connect through a private endpoint](./service-create-private-endpoint.md#portal-access-private-search-service).

additionalContent: |

  ## Next steps

  If your question isn't answered here, you can refer to the following sources for more questions and answers.
  
     [Stack Overflow: Azure AI Search](https://stackoverflow.com/questions/tagged/azure-search)   
     [How full text search works in Azure AI Search](search-lucene-query-architecture.md)  
     [What is Azure AI Search?](search-what-is-azure-search.md)
